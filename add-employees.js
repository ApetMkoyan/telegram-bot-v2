const fs = require('fs');
const path = require('path');
const config = require('./config');

// –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
const allEmployees = [
  '–î–∞—à–∞', '–°–≤–µ—Ç–∞', '–ú–∏–ª–µ–Ω–∞', '–î–∂–∞—Ñ–∞—Ä', '–í–∏–∫–∞', '–ê–ª–∏–Ω–∞', 
  '–°–∞–Ω—è', '–î–∏–º–∞', '–ê–Ω–¥—Ä–µ–π', '–ê–ª—ë–Ω–∞', '–ö–∏—Ä–∏–ª', '–†–æ–±–µ—Ä—Ç', 
  '–ö—Å–µ–Ω–∏—è', '–ù–∞—Å—Ç—è', '–ü–ª—É—Ç–æ–Ω', '–°—Ç–∞—Å', '–í–ª–∞–¥', '–ê—Ä—Ç—ë–º'
];

// –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–µ–≥–æ–¥–Ω—è –ø—Ä–∏—à–ª–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É
const todayWorking = ['–°–≤–µ—Ç–∞', '–î–∞—à–∞', '–ú–∏–ª–µ–Ω–∞', '–î–∂–∞—Ñ–∞—Ä', '–°–∞–Ω—è', '–î–∏–º–∞', '–ö–∏—Ä–∏–ª', '–ö—Å–µ–Ω–∏—è', '–ù–∞—Å—Ç—è'];

// –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö –∑–∞–≤—Ç—Ä–∞ –≤—ã—Ö–æ–¥–Ω–æ–π
const tomorrowDayOff = ['–ú–∏–ª–µ–Ω–∞', '–î–∂–∞—Ñ–∞—Ä', '–î–∏–º–∞', '–ê–Ω–¥—Ä–µ–π', '–†–æ–±–µ—Ä—Ç'];

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
function loadData() {
  const dataFile = config.DATA_SETTINGS.dataFile;
  if (fs.existsSync(dataFile)) {
    const raw = fs.readFileSync(dataFile);
    return JSON.parse(raw);
  }
  return {
    parkFrunze: { employees: [], shifts: {}, machines: [] },
    parkMorVokzal: { employees: [], shifts: {}, machines: [] },
    parkNeptun: { employees: [], shifts: {}, machines: [] }
  };
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
function saveData(data) {
  const dataFile = config.DATA_SETTINGS.dataFile;
  const dataDir = path.dirname(dataFile);
  
  if (!fs.existsSync(dataDir)) {
    fs.mkdirSync(dataDir, { recursive: true });
  }
  
  fs.writeFileSync(dataFile, JSON.stringify(data, null, 2));
  console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
function addEmployees() {
  console.log('üë• –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ —Å–∏—Å—Ç–µ–º—É...');
  
  const data = loadData();
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ –ø–∞—Ä–∫ –§—Ä—É–Ω–∑–µ (–æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ä–∫)
  data.parkFrunze.employees = allEmployees;
  
  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–º–µ–Ω—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è (–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –∏–Ω–¥–µ–∫—Å 0)
  const today = new Date();
  const dayOfWeek = today.getDay() === 0 ? 6 : today.getDay() - 1; // 0 = –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
  
  console.log(`üìÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–º–µ–Ω –Ω–∞ —Å–µ–≥–æ–¥–Ω—è (–¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏: ${dayOfWeek})`);
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–º–µ–Ω—ã –¥–ª—è –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
  allEmployees.forEach(employee => {
    if (!data.parkFrunze.shifts[employee]) {
      data.parkFrunze.shifts[employee] = Array(7).fill('');
    }
    
    // –ï—Å–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å–µ–≥–æ–¥–Ω—è —Ä–∞–±–æ—Ç–∞–µ—Ç - —Å—Ç–∞–≤–∏–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Å–º–µ–Ω—É
    if (todayWorking.includes(employee)) {
      data.parkFrunze.shifts[employee][dayOfWeek] = '—Å—Ç';
      console.log(`‚úÖ ${employee} - —Å–µ–≥–æ–¥–Ω—è —Ä–∞–±–æ—Ç–∞–µ—Ç (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å–º–µ–Ω–∞)`);
    } else {
      data.parkFrunze.shifts[employee][dayOfWeek] = '–≤—ã—Ö';
      console.log(`‚ùå ${employee} - —Å–µ–≥–æ–¥–Ω—è –≤—ã—Ö–æ–¥–Ω–æ–π`);
    }
  });
  
  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–º–µ–Ω—ã –Ω–∞ –∑–∞–≤—Ç—Ä–∞
  const tomorrow = new Date();
  tomorrow.setDate(tomorrow.getDate() + 1);
  const tomorrowDayOfWeek = tomorrow.getDay() === 0 ? 6 : tomorrow.getDay() - 1;
  
  console.log(`üìÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–º–µ–Ω –Ω–∞ –∑–∞–≤—Ç—Ä–∞ (–¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏: ${tomorrowDayOfWeek})`);
  
  allEmployees.forEach(employee => {
    // –ï—Å–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –∑–∞–≤—Ç—Ä–∞ –Ω–∞ –≤—ã—Ö–æ–¥–Ω–æ–º - —Å—Ç–∞–≤–∏–º –≤—ã—Ö–æ–¥–Ω–æ–π
    if (tomorrowDayOff.includes(employee)) {
      data.parkFrunze.shifts[employee][tomorrowDayOfWeek] = '–≤—ã—Ö';
      console.log(`‚ùå ${employee} - –∑–∞–≤—Ç—Ä–∞ –≤—ã—Ö–æ–¥–Ω–æ–π`);
    } else {
      // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å—Ç–∞–≤–∏–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Å–º–µ–Ω—É
      data.parkFrunze.shifts[employee][tomorrowDayOfWeek] = '—Å—Ç';
      console.log(`‚úÖ ${employee} - –∑–∞–≤—Ç—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å–º–µ–Ω–∞)`);
    }
  });
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
  saveData(data);
  
  console.log('\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
  console.log(`üë• –í—Å–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: ${allEmployees.length}`);
  console.log(`‚úÖ –°–µ–≥–æ–¥–Ω—è —Ä–∞–±–æ—Ç–∞—é—Ç: ${todayWorking.length}`);
  console.log(`‚ùå –°–µ–≥–æ–¥–Ω—è –≤—ã—Ö–æ–¥–Ω—ã–µ: ${allEmployees.length - todayWorking.length}`);
  console.log(`‚ùå –ó–∞–≤—Ç—Ä–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ: ${tomorrowDayOff.length}`);
  console.log(`‚úÖ –ó–∞–≤—Ç—Ä–∞ —Ä–∞–±–æ—Ç–∞—é—Ç: ${allEmployees.length - tomorrowDayOff.length}`);
  
  console.log('\nüìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:');
  allEmployees.forEach((emp, index) => {
    console.log(`${index + 1}. ${emp}`);
  });
  
  console.log('\n‚úÖ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–∏—Å—Ç–µ–º—É!');
  console.log('üéØ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å');
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
addEmployees(); 